// Code generated from sl/SL.g4 by ANTLR 4.13.1. DO NOT EDIT.

package parser

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type SLLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var SLLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func sllexerLexerInit() {
	staticData := &SLLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'false'", "'null'", "'true'", "'as'", "'break'", "'const'", "'continue'",
		"'else'", "'for'", "'function'", "'if'", "'import'", "'in'", "'let'",
		"'loop'", "'package'", "'namespace'", "'return'", "'var'", "'void'",
		"'while'", "'=='", "'!='", "'<'", "'<='", "'>='", "'>'", "'&&'", "'||'",
		"'['", "']'", "'{'", "'}'", "'('", "')'", "'.'", "','", "'-'", "'!'",
		"'?'", "':'", "'+'", "'*'", "'/'", "'%'",
	}
	staticData.SymbolicNames = []string{
		"", "FALSE", "NULL", "TRUE", "AS", "BREAK", "CONST", "CONTINUE", "ELSE",
		"FOR", "FUNCTION", "IF", "IMPORT", "IN", "LET", "LOOP", "PACKAGE", "NAMESPACE",
		"RETURN", "VAR", "VOID", "WHILE", "EQUALS", "NOT_EQUALS", "LESS", "LESS_EQUALS",
		"GREATER_EQUALS", "GREATER", "LOGICAL_AND", "LOGICAL_OR", "LBRACKET",
		"RPRACKET", "LBRACE", "RBRACE", "LPAREN", "RPAREN", "DOT", "COMMA",
		"MINUS", "EXCLAM", "QUESTIONMARK", "COLON", "PLUS", "STAR", "SLASH",
		"PERCENT", "WHITESPACE", "COMMENT", "NUM_FLOAT", "NUM_INT", "NUM_UINT",
		"STRING", "BYTES", "IDENTIFIER", "ESC_IDENTIFIER",
	}
	staticData.RuleNames = []string{
		"FALSE", "NULL", "TRUE", "AS", "BREAK", "CONST", "CONTINUE", "ELSE",
		"FOR", "FUNCTION", "IF", "IMPORT", "IN", "LET", "LOOP", "PACKAGE", "NAMESPACE",
		"RETURN", "VAR", "VOID", "WHILE", "EQUALS", "NOT_EQUALS", "LESS", "LESS_EQUALS",
		"GREATER_EQUALS", "GREATER", "LOGICAL_AND", "LOGICAL_OR", "LBRACKET",
		"RPRACKET", "LBRACE", "RBRACE", "LPAREN", "RPAREN", "DOT", "COMMA",
		"MINUS", "EXCLAM", "QUESTIONMARK", "COLON", "PLUS", "STAR", "SLASH",
		"PERCENT", "BACKSLASH", "LETTER", "DIGIT", "EXPONENT", "HEXDIGIT", "RAW",
		"ESC_SEQ", "ESC_CHAR_SEQ", "ESC_OCT_SEQ", "ESC_BYTE_SEQ", "ESC_UNI_SEQ",
		"WHITESPACE", "COMMENT", "NUM_FLOAT", "NUM_INT", "NUM_UINT", "STRING",
		"BYTES", "IDENTIFIER", "ESC_IDENTIFIER",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 54, 570, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57,
		7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2, 60, 7, 60, 2, 61, 7, 61, 2, 62, 7,
		62, 2, 63, 7, 63, 2, 64, 7, 64, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,
		1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 3, 1, 3, 1,
		3, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1,
		5, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7, 1,
		7, 1, 7, 1, 7, 1, 8, 1, 8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1,
		9, 1, 9, 1, 9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1, 11, 1,
		11, 1, 11, 1, 11, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 13, 1, 14,
		1, 14, 1, 14, 1, 14, 1, 14, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1,
		15, 1, 15, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16,
		1, 16, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 18, 1, 18, 1,
		18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 20, 1, 20, 1, 20, 1, 20,
		1, 20, 1, 20, 1, 21, 1, 21, 1, 21, 1, 22, 1, 22, 1, 22, 1, 23, 1, 23, 1,
		24, 1, 24, 1, 24, 1, 25, 1, 25, 1, 25, 1, 26, 1, 26, 1, 27, 1, 27, 1, 27,
		1, 28, 1, 28, 1, 28, 1, 29, 1, 29, 1, 30, 1, 30, 1, 31, 1, 31, 1, 32, 1,
		32, 1, 33, 1, 33, 1, 34, 1, 34, 1, 35, 1, 35, 1, 36, 1, 36, 1, 37, 1, 37,
		1, 38, 1, 38, 1, 39, 1, 39, 1, 40, 1, 40, 1, 41, 1, 41, 1, 42, 1, 42, 1,
		43, 1, 43, 1, 44, 1, 44, 1, 45, 1, 45, 1, 46, 1, 46, 1, 47, 1, 47, 1, 48,
		1, 48, 3, 48, 314, 8, 48, 1, 48, 4, 48, 317, 8, 48, 11, 48, 12, 48, 318,
		1, 49, 1, 49, 1, 50, 1, 50, 1, 51, 1, 51, 1, 51, 1, 51, 3, 51, 329, 8,
		51, 1, 52, 1, 52, 1, 52, 1, 53, 1, 53, 1, 53, 1, 53, 1, 53, 1, 54, 1, 54,
		1, 54, 1, 54, 1, 54, 1, 55, 1, 55, 1, 55, 1, 55, 1, 55, 1, 55, 1, 55, 1,
		55, 1, 55, 1, 55, 1, 55, 1, 55, 1, 55, 1, 55, 1, 55, 1, 55, 1, 55, 1, 55,
		3, 55, 362, 8, 55, 1, 56, 4, 56, 365, 8, 56, 11, 56, 12, 56, 366, 1, 56,
		1, 56, 1, 57, 1, 57, 1, 57, 1, 57, 5, 57, 375, 8, 57, 10, 57, 12, 57, 378,
		9, 57, 1, 57, 1, 57, 1, 58, 4, 58, 383, 8, 58, 11, 58, 12, 58, 384, 1,
		58, 1, 58, 4, 58, 389, 8, 58, 11, 58, 12, 58, 390, 1, 58, 3, 58, 394, 8,
		58, 1, 58, 4, 58, 397, 8, 58, 11, 58, 12, 58, 398, 1, 58, 1, 58, 1, 58,
		1, 58, 4, 58, 405, 8, 58, 11, 58, 12, 58, 406, 1, 58, 3, 58, 410, 8, 58,
		3, 58, 412, 8, 58, 1, 59, 4, 59, 415, 8, 59, 11, 59, 12, 59, 416, 1, 59,
		1, 59, 1, 59, 1, 59, 4, 59, 423, 8, 59, 11, 59, 12, 59, 424, 3, 59, 427,
		8, 59, 1, 60, 4, 60, 430, 8, 60, 11, 60, 12, 60, 431, 1, 60, 1, 60, 1,
		60, 1, 60, 1, 60, 1, 60, 4, 60, 440, 8, 60, 11, 60, 12, 60, 441, 1, 60,
		1, 60, 3, 60, 446, 8, 60, 1, 61, 1, 61, 1, 61, 5, 61, 451, 8, 61, 10, 61,
		12, 61, 454, 9, 61, 1, 61, 1, 61, 1, 61, 1, 61, 5, 61, 460, 8, 61, 10,
		61, 12, 61, 463, 9, 61, 1, 61, 1, 61, 1, 61, 1, 61, 1, 61, 1, 61, 1, 61,
		5, 61, 472, 8, 61, 10, 61, 12, 61, 475, 9, 61, 1, 61, 1, 61, 1, 61, 1,
		61, 1, 61, 1, 61, 1, 61, 1, 61, 1, 61, 5, 61, 486, 8, 61, 10, 61, 12, 61,
		489, 9, 61, 1, 61, 1, 61, 1, 61, 1, 61, 1, 61, 1, 61, 5, 61, 497, 8, 61,
		10, 61, 12, 61, 500, 9, 61, 1, 61, 1, 61, 1, 61, 1, 61, 1, 61, 5, 61, 507,
		8, 61, 10, 61, 12, 61, 510, 9, 61, 1, 61, 1, 61, 1, 61, 1, 61, 1, 61, 1,
		61, 1, 61, 1, 61, 5, 61, 520, 8, 61, 10, 61, 12, 61, 523, 9, 61, 1, 61,
		1, 61, 1, 61, 1, 61, 1, 61, 1, 61, 1, 61, 1, 61, 1, 61, 1, 61, 5, 61, 535,
		8, 61, 10, 61, 12, 61, 538, 9, 61, 1, 61, 1, 61, 1, 61, 1, 61, 3, 61, 544,
		8, 61, 1, 62, 1, 62, 1, 62, 1, 63, 1, 63, 3, 63, 551, 8, 63, 1, 63, 1,
		63, 1, 63, 5, 63, 556, 8, 63, 10, 63, 12, 63, 559, 9, 63, 1, 64, 1, 64,
		1, 64, 1, 64, 4, 64, 565, 8, 64, 11, 64, 12, 64, 566, 1, 64, 1, 64, 4,
		473, 487, 521, 536, 0, 65, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7,
		15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31, 16, 33,
		17, 35, 18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24, 49, 25, 51,
		26, 53, 27, 55, 28, 57, 29, 59, 30, 61, 31, 63, 32, 65, 33, 67, 34, 69,
		35, 71, 36, 73, 37, 75, 38, 77, 39, 79, 40, 81, 41, 83, 42, 85, 43, 87,
		44, 89, 45, 91, 0, 93, 0, 95, 0, 97, 0, 99, 0, 101, 0, 103, 0, 105, 0,
		107, 0, 109, 0, 111, 0, 113, 46, 115, 47, 117, 48, 119, 49, 121, 50, 123,
		51, 125, 52, 127, 53, 129, 54, 1, 0, 17, 2, 0, 65, 90, 97, 122, 2, 0, 69,
		69, 101, 101, 2, 0, 43, 43, 45, 45, 3, 0, 48, 57, 65, 70, 97, 102, 2, 0,
		82, 82, 114, 114, 10, 0, 34, 34, 39, 39, 63, 63, 92, 92, 96, 98, 102, 102,
		110, 110, 114, 114, 116, 116, 118, 118, 2, 0, 88, 88, 120, 120, 3, 0, 9,
		10, 12, 13, 32, 32, 1, 0, 10, 10, 2, 0, 85, 85, 117, 117, 4, 0, 10, 10,
		13, 13, 34, 34, 92, 92, 4, 0, 10, 10, 13, 13, 39, 39, 92, 92, 1, 0, 92,
		92, 3, 0, 10, 10, 13, 13, 34, 34, 3, 0, 10, 10, 13, 13, 39, 39, 2, 0, 66,
		66, 98, 98, 3, 0, 32, 32, 45, 47, 95, 95, 606, 0, 1, 1, 0, 0, 0, 0, 3,
		1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11,
		1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0,
		19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0,
		0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0,
		0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0,
		0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1,
		0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57,
		1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0,
		65, 1, 0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0,
		0, 73, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0, 0, 0, 79, 1, 0, 0,
		0, 0, 81, 1, 0, 0, 0, 0, 83, 1, 0, 0, 0, 0, 85, 1, 0, 0, 0, 0, 87, 1, 0,
		0, 0, 0, 89, 1, 0, 0, 0, 0, 113, 1, 0, 0, 0, 0, 115, 1, 0, 0, 0, 0, 117,
		1, 0, 0, 0, 0, 119, 1, 0, 0, 0, 0, 121, 1, 0, 0, 0, 0, 123, 1, 0, 0, 0,
		0, 125, 1, 0, 0, 0, 0, 127, 1, 0, 0, 0, 0, 129, 1, 0, 0, 0, 1, 131, 1,
		0, 0, 0, 3, 137, 1, 0, 0, 0, 5, 142, 1, 0, 0, 0, 7, 147, 1, 0, 0, 0, 9,
		150, 1, 0, 0, 0, 11, 156, 1, 0, 0, 0, 13, 162, 1, 0, 0, 0, 15, 171, 1,
		0, 0, 0, 17, 176, 1, 0, 0, 0, 19, 180, 1, 0, 0, 0, 21, 189, 1, 0, 0, 0,
		23, 192, 1, 0, 0, 0, 25, 199, 1, 0, 0, 0, 27, 202, 1, 0, 0, 0, 29, 206,
		1, 0, 0, 0, 31, 211, 1, 0, 0, 0, 33, 219, 1, 0, 0, 0, 35, 229, 1, 0, 0,
		0, 37, 236, 1, 0, 0, 0, 39, 240, 1, 0, 0, 0, 41, 245, 1, 0, 0, 0, 43, 251,
		1, 0, 0, 0, 45, 254, 1, 0, 0, 0, 47, 257, 1, 0, 0, 0, 49, 259, 1, 0, 0,
		0, 51, 262, 1, 0, 0, 0, 53, 265, 1, 0, 0, 0, 55, 267, 1, 0, 0, 0, 57, 270,
		1, 0, 0, 0, 59, 273, 1, 0, 0, 0, 61, 275, 1, 0, 0, 0, 63, 277, 1, 0, 0,
		0, 65, 279, 1, 0, 0, 0, 67, 281, 1, 0, 0, 0, 69, 283, 1, 0, 0, 0, 71, 285,
		1, 0, 0, 0, 73, 287, 1, 0, 0, 0, 75, 289, 1, 0, 0, 0, 77, 291, 1, 0, 0,
		0, 79, 293, 1, 0, 0, 0, 81, 295, 1, 0, 0, 0, 83, 297, 1, 0, 0, 0, 85, 299,
		1, 0, 0, 0, 87, 301, 1, 0, 0, 0, 89, 303, 1, 0, 0, 0, 91, 305, 1, 0, 0,
		0, 93, 307, 1, 0, 0, 0, 95, 309, 1, 0, 0, 0, 97, 311, 1, 0, 0, 0, 99, 320,
		1, 0, 0, 0, 101, 322, 1, 0, 0, 0, 103, 328, 1, 0, 0, 0, 105, 330, 1, 0,
		0, 0, 107, 333, 1, 0, 0, 0, 109, 338, 1, 0, 0, 0, 111, 361, 1, 0, 0, 0,
		113, 364, 1, 0, 0, 0, 115, 370, 1, 0, 0, 0, 117, 411, 1, 0, 0, 0, 119,
		426, 1, 0, 0, 0, 121, 445, 1, 0, 0, 0, 123, 543, 1, 0, 0, 0, 125, 545,
		1, 0, 0, 0, 127, 550, 1, 0, 0, 0, 129, 560, 1, 0, 0, 0, 131, 132, 5, 102,
		0, 0, 132, 133, 5, 97, 0, 0, 133, 134, 5, 108, 0, 0, 134, 135, 5, 115,
		0, 0, 135, 136, 5, 101, 0, 0, 136, 2, 1, 0, 0, 0, 137, 138, 5, 110, 0,
		0, 138, 139, 5, 117, 0, 0, 139, 140, 5, 108, 0, 0, 140, 141, 5, 108, 0,
		0, 141, 4, 1, 0, 0, 0, 142, 143, 5, 116, 0, 0, 143, 144, 5, 114, 0, 0,
		144, 145, 5, 117, 0, 0, 145, 146, 5, 101, 0, 0, 146, 6, 1, 0, 0, 0, 147,
		148, 5, 97, 0, 0, 148, 149, 5, 115, 0, 0, 149, 8, 1, 0, 0, 0, 150, 151,
		5, 98, 0, 0, 151, 152, 5, 114, 0, 0, 152, 153, 5, 101, 0, 0, 153, 154,
		5, 97, 0, 0, 154, 155, 5, 107, 0, 0, 155, 10, 1, 0, 0, 0, 156, 157, 5,
		99, 0, 0, 157, 158, 5, 111, 0, 0, 158, 159, 5, 110, 0, 0, 159, 160, 5,
		115, 0, 0, 160, 161, 5, 116, 0, 0, 161, 12, 1, 0, 0, 0, 162, 163, 5, 99,
		0, 0, 163, 164, 5, 111, 0, 0, 164, 165, 5, 110, 0, 0, 165, 166, 5, 116,
		0, 0, 166, 167, 5, 105, 0, 0, 167, 168, 5, 110, 0, 0, 168, 169, 5, 117,
		0, 0, 169, 170, 5, 101, 0, 0, 170, 14, 1, 0, 0, 0, 171, 172, 5, 101, 0,
		0, 172, 173, 5, 108, 0, 0, 173, 174, 5, 115, 0, 0, 174, 175, 5, 101, 0,
		0, 175, 16, 1, 0, 0, 0, 176, 177, 5, 102, 0, 0, 177, 178, 5, 111, 0, 0,
		178, 179, 5, 114, 0, 0, 179, 18, 1, 0, 0, 0, 180, 181, 5, 102, 0, 0, 181,
		182, 5, 117, 0, 0, 182, 183, 5, 110, 0, 0, 183, 184, 5, 99, 0, 0, 184,
		185, 5, 116, 0, 0, 185, 186, 5, 105, 0, 0, 186, 187, 5, 111, 0, 0, 187,
		188, 5, 110, 0, 0, 188, 20, 1, 0, 0, 0, 189, 190, 5, 105, 0, 0, 190, 191,
		5, 102, 0, 0, 191, 22, 1, 0, 0, 0, 192, 193, 5, 105, 0, 0, 193, 194, 5,
		109, 0, 0, 194, 195, 5, 112, 0, 0, 195, 196, 5, 111, 0, 0, 196, 197, 5,
		114, 0, 0, 197, 198, 5, 116, 0, 0, 198, 24, 1, 0, 0, 0, 199, 200, 5, 105,
		0, 0, 200, 201, 5, 110, 0, 0, 201, 26, 1, 0, 0, 0, 202, 203, 5, 108, 0,
		0, 203, 204, 5, 101, 0, 0, 204, 205, 5, 116, 0, 0, 205, 28, 1, 0, 0, 0,
		206, 207, 5, 108, 0, 0, 207, 208, 5, 111, 0, 0, 208, 209, 5, 111, 0, 0,
		209, 210, 5, 112, 0, 0, 210, 30, 1, 0, 0, 0, 211, 212, 5, 112, 0, 0, 212,
		213, 5, 97, 0, 0, 213, 214, 5, 99, 0, 0, 214, 215, 5, 107, 0, 0, 215, 216,
		5, 97, 0, 0, 216, 217, 5, 103, 0, 0, 217, 218, 5, 101, 0, 0, 218, 32, 1,
		0, 0, 0, 219, 220, 5, 110, 0, 0, 220, 221, 5, 97, 0, 0, 221, 222, 5, 109,
		0, 0, 222, 223, 5, 101, 0, 0, 223, 224, 5, 115, 0, 0, 224, 225, 5, 112,
		0, 0, 225, 226, 5, 97, 0, 0, 226, 227, 5, 99, 0, 0, 227, 228, 5, 101, 0,
		0, 228, 34, 1, 0, 0, 0, 229, 230, 5, 114, 0, 0, 230, 231, 5, 101, 0, 0,
		231, 232, 5, 116, 0, 0, 232, 233, 5, 117, 0, 0, 233, 234, 5, 114, 0, 0,
		234, 235, 5, 110, 0, 0, 235, 36, 1, 0, 0, 0, 236, 237, 5, 118, 0, 0, 237,
		238, 5, 97, 0, 0, 238, 239, 5, 114, 0, 0, 239, 38, 1, 0, 0, 0, 240, 241,
		5, 118, 0, 0, 241, 242, 5, 111, 0, 0, 242, 243, 5, 105, 0, 0, 243, 244,
		5, 100, 0, 0, 244, 40, 1, 0, 0, 0, 245, 246, 5, 119, 0, 0, 246, 247, 5,
		104, 0, 0, 247, 248, 5, 105, 0, 0, 248, 249, 5, 108, 0, 0, 249, 250, 5,
		101, 0, 0, 250, 42, 1, 0, 0, 0, 251, 252, 5, 61, 0, 0, 252, 253, 5, 61,
		0, 0, 253, 44, 1, 0, 0, 0, 254, 255, 5, 33, 0, 0, 255, 256, 5, 61, 0, 0,
		256, 46, 1, 0, 0, 0, 257, 258, 5, 60, 0, 0, 258, 48, 1, 0, 0, 0, 259, 260,
		5, 60, 0, 0, 260, 261, 5, 61, 0, 0, 261, 50, 1, 0, 0, 0, 262, 263, 5, 62,
		0, 0, 263, 264, 5, 61, 0, 0, 264, 52, 1, 0, 0, 0, 265, 266, 5, 62, 0, 0,
		266, 54, 1, 0, 0, 0, 267, 268, 5, 38, 0, 0, 268, 269, 5, 38, 0, 0, 269,
		56, 1, 0, 0, 0, 270, 271, 5, 124, 0, 0, 271, 272, 5, 124, 0, 0, 272, 58,
		1, 0, 0, 0, 273, 274, 5, 91, 0, 0, 274, 60, 1, 0, 0, 0, 275, 276, 5, 93,
		0, 0, 276, 62, 1, 0, 0, 0, 277, 278, 5, 123, 0, 0, 278, 64, 1, 0, 0, 0,
		279, 280, 5, 125, 0, 0, 280, 66, 1, 0, 0, 0, 281, 282, 5, 40, 0, 0, 282,
		68, 1, 0, 0, 0, 283, 284, 5, 41, 0, 0, 284, 70, 1, 0, 0, 0, 285, 286, 5,
		46, 0, 0, 286, 72, 1, 0, 0, 0, 287, 288, 5, 44, 0, 0, 288, 74, 1, 0, 0,
		0, 289, 290, 5, 45, 0, 0, 290, 76, 1, 0, 0, 0, 291, 292, 5, 33, 0, 0, 292,
		78, 1, 0, 0, 0, 293, 294, 5, 63, 0, 0, 294, 80, 1, 0, 0, 0, 295, 296, 5,
		58, 0, 0, 296, 82, 1, 0, 0, 0, 297, 298, 5, 43, 0, 0, 298, 84, 1, 0, 0,
		0, 299, 300, 5, 42, 0, 0, 300, 86, 1, 0, 0, 0, 301, 302, 5, 47, 0, 0, 302,
		88, 1, 0, 0, 0, 303, 304, 5, 37, 0, 0, 304, 90, 1, 0, 0, 0, 305, 306, 5,
		92, 0, 0, 306, 92, 1, 0, 0, 0, 307, 308, 7, 0, 0, 0, 308, 94, 1, 0, 0,
		0, 309, 310, 2, 48, 57, 0, 310, 96, 1, 0, 0, 0, 311, 313, 7, 1, 0, 0, 312,
		314, 7, 2, 0, 0, 313, 312, 1, 0, 0, 0, 313, 314, 1, 0, 0, 0, 314, 316,
		1, 0, 0, 0, 315, 317, 3, 95, 47, 0, 316, 315, 1, 0, 0, 0, 317, 318, 1,
		0, 0, 0, 318, 316, 1, 0, 0, 0, 318, 319, 1, 0, 0, 0, 319, 98, 1, 0, 0,
		0, 320, 321, 7, 3, 0, 0, 321, 100, 1, 0, 0, 0, 322, 323, 7, 4, 0, 0, 323,
		102, 1, 0, 0, 0, 324, 329, 3, 105, 52, 0, 325, 329, 3, 109, 54, 0, 326,
		329, 3, 111, 55, 0, 327, 329, 3, 107, 53, 0, 328, 324, 1, 0, 0, 0, 328,
		325, 1, 0, 0, 0, 328, 326, 1, 0, 0, 0, 328, 327, 1, 0, 0, 0, 329, 104,
		1, 0, 0, 0, 330, 331, 3, 91, 45, 0, 331, 332, 7, 5, 0, 0, 332, 106, 1,
		0, 0, 0, 333, 334, 3, 91, 45, 0, 334, 335, 2, 48, 51, 0, 335, 336, 2, 48,
		55, 0, 336, 337, 2, 48, 55, 0, 337, 108, 1, 0, 0, 0, 338, 339, 3, 91, 45,
		0, 339, 340, 7, 6, 0, 0, 340, 341, 3, 99, 49, 0, 341, 342, 3, 99, 49, 0,
		342, 110, 1, 0, 0, 0, 343, 344, 3, 91, 45, 0, 344, 345, 5, 117, 0, 0, 345,
		346, 3, 99, 49, 0, 346, 347, 3, 99, 49, 0, 347, 348, 3, 99, 49, 0, 348,
		349, 3, 99, 49, 0, 349, 362, 1, 0, 0, 0, 350, 351, 3, 91, 45, 0, 351, 352,
		5, 85, 0, 0, 352, 353, 3, 99, 49, 0, 353, 354, 3, 99, 49, 0, 354, 355,
		3, 99, 49, 0, 355, 356, 3, 99, 49, 0, 356, 357, 3, 99, 49, 0, 357, 358,
		3, 99, 49, 0, 358, 359, 3, 99, 49, 0, 359, 360, 3, 99, 49, 0, 360, 362,
		1, 0, 0, 0, 361, 343, 1, 0, 0, 0, 361, 350, 1, 0, 0, 0, 362, 112, 1, 0,
		0, 0, 363, 365, 7, 7, 0, 0, 364, 363, 1, 0, 0, 0, 365, 366, 1, 0, 0, 0,
		366, 364, 1, 0, 0, 0, 366, 367, 1, 0, 0, 0, 367, 368, 1, 0, 0, 0, 368,
		369, 6, 56, 0, 0, 369, 114, 1, 0, 0, 0, 370, 371, 5, 47, 0, 0, 371, 372,
		5, 47, 0, 0, 372, 376, 1, 0, 0, 0, 373, 375, 8, 8, 0, 0, 374, 373, 1, 0,
		0, 0, 375, 378, 1, 0, 0, 0, 376, 374, 1, 0, 0, 0, 376, 377, 1, 0, 0, 0,
		377, 379, 1, 0, 0, 0, 378, 376, 1, 0, 0, 0, 379, 380, 6, 57, 0, 0, 380,
		116, 1, 0, 0, 0, 381, 383, 3, 95, 47, 0, 382, 381, 1, 0, 0, 0, 383, 384,
		1, 0, 0, 0, 384, 382, 1, 0, 0, 0, 384, 385, 1, 0, 0, 0, 385, 386, 1, 0,
		0, 0, 386, 388, 5, 46, 0, 0, 387, 389, 3, 95, 47, 0, 388, 387, 1, 0, 0,
		0, 389, 390, 1, 0, 0, 0, 390, 388, 1, 0, 0, 0, 390, 391, 1, 0, 0, 0, 391,
		393, 1, 0, 0, 0, 392, 394, 3, 97, 48, 0, 393, 392, 1, 0, 0, 0, 393, 394,
		1, 0, 0, 0, 394, 412, 1, 0, 0, 0, 395, 397, 3, 95, 47, 0, 396, 395, 1,
		0, 0, 0, 397, 398, 1, 0, 0, 0, 398, 396, 1, 0, 0, 0, 398, 399, 1, 0, 0,
		0, 399, 400, 1, 0, 0, 0, 400, 401, 3, 97, 48, 0, 401, 412, 1, 0, 0, 0,
		402, 404, 5, 46, 0, 0, 403, 405, 3, 95, 47, 0, 404, 403, 1, 0, 0, 0, 405,
		406, 1, 0, 0, 0, 406, 404, 1, 0, 0, 0, 406, 407, 1, 0, 0, 0, 407, 409,
		1, 0, 0, 0, 408, 410, 3, 97, 48, 0, 409, 408, 1, 0, 0, 0, 409, 410, 1,
		0, 0, 0, 410, 412, 1, 0, 0, 0, 411, 382, 1, 0, 0, 0, 411, 396, 1, 0, 0,
		0, 411, 402, 1, 0, 0, 0, 412, 118, 1, 0, 0, 0, 413, 415, 3, 95, 47, 0,
		414, 413, 1, 0, 0, 0, 415, 416, 1, 0, 0, 0, 416, 414, 1, 0, 0, 0, 416,
		417, 1, 0, 0, 0, 417, 427, 1, 0, 0, 0, 418, 419, 5, 48, 0, 0, 419, 420,
		5, 120, 0, 0, 420, 422, 1, 0, 0, 0, 421, 423, 3, 99, 49, 0, 422, 421, 1,
		0, 0, 0, 423, 424, 1, 0, 0, 0, 424, 422, 1, 0, 0, 0, 424, 425, 1, 0, 0,
		0, 425, 427, 1, 0, 0, 0, 426, 414, 1, 0, 0, 0, 426, 418, 1, 0, 0, 0, 427,
		120, 1, 0, 0, 0, 428, 430, 3, 95, 47, 0, 429, 428, 1, 0, 0, 0, 430, 431,
		1, 0, 0, 0, 431, 429, 1, 0, 0, 0, 431, 432, 1, 0, 0, 0, 432, 433, 1, 0,
		0, 0, 433, 434, 7, 9, 0, 0, 434, 446, 1, 0, 0, 0, 435, 436, 5, 48, 0, 0,
		436, 437, 5, 120, 0, 0, 437, 439, 1, 0, 0, 0, 438, 440, 3, 99, 49, 0, 439,
		438, 1, 0, 0, 0, 440, 441, 1, 0, 0, 0, 441, 439, 1, 0, 0, 0, 441, 442,
		1, 0, 0, 0, 442, 443, 1, 0, 0, 0, 443, 444, 7, 9, 0, 0, 444, 446, 1, 0,
		0, 0, 445, 429, 1, 0, 0, 0, 445, 435, 1, 0, 0, 0, 446, 122, 1, 0, 0, 0,
		447, 452, 5, 34, 0, 0, 448, 451, 3, 103, 51, 0, 449, 451, 8, 10, 0, 0,
		450, 448, 1, 0, 0, 0, 450, 449, 1, 0, 0, 0, 451, 454, 1, 0, 0, 0, 452,
		450, 1, 0, 0, 0, 452, 453, 1, 0, 0, 0, 453, 455, 1, 0, 0, 0, 454, 452,
		1, 0, 0, 0, 455, 544, 5, 34, 0, 0, 456, 461, 5, 39, 0, 0, 457, 460, 3,
		103, 51, 0, 458, 460, 8, 11, 0, 0, 459, 457, 1, 0, 0, 0, 459, 458, 1, 0,
		0, 0, 460, 463, 1, 0, 0, 0, 461, 459, 1, 0, 0, 0, 461, 462, 1, 0, 0, 0,
		462, 464, 1, 0, 0, 0, 463, 461, 1, 0, 0, 0, 464, 544, 5, 39, 0, 0, 465,
		466, 5, 34, 0, 0, 466, 467, 5, 34, 0, 0, 467, 468, 5, 34, 0, 0, 468, 473,
		1, 0, 0, 0, 469, 472, 3, 103, 51, 0, 470, 472, 8, 12, 0, 0, 471, 469, 1,
		0, 0, 0, 471, 470, 1, 0, 0, 0, 472, 475, 1, 0, 0, 0, 473, 474, 1, 0, 0,
		0, 473, 471, 1, 0, 0, 0, 474, 476, 1, 0, 0, 0, 475, 473, 1, 0, 0, 0, 476,
		477, 5, 34, 0, 0, 477, 478, 5, 34, 0, 0, 478, 544, 5, 34, 0, 0, 479, 480,
		5, 39, 0, 0, 480, 481, 5, 39, 0, 0, 481, 482, 5, 39, 0, 0, 482, 487, 1,
		0, 0, 0, 483, 486, 3, 103, 51, 0, 484, 486, 8, 12, 0, 0, 485, 483, 1, 0,
		0, 0, 485, 484, 1, 0, 0, 0, 486, 489, 1, 0, 0, 0, 487, 488, 1, 0, 0, 0,
		487, 485, 1, 0, 0, 0, 488, 490, 1, 0, 0, 0, 489, 487, 1, 0, 0, 0, 490,
		491, 5, 39, 0, 0, 491, 492, 5, 39, 0, 0, 492, 544, 5, 39, 0, 0, 493, 494,
		3, 101, 50, 0, 494, 498, 5, 34, 0, 0, 495, 497, 8, 13, 0, 0, 496, 495,
		1, 0, 0, 0, 497, 500, 1, 0, 0, 0, 498, 496, 1, 0, 0, 0, 498, 499, 1, 0,
		0, 0, 499, 501, 1, 0, 0, 0, 500, 498, 1, 0, 0, 0, 501, 502, 5, 34, 0, 0,
		502, 544, 1, 0, 0, 0, 503, 504, 3, 101, 50, 0, 504, 508, 5, 39, 0, 0, 505,
		507, 8, 14, 0, 0, 506, 505, 1, 0, 0, 0, 507, 510, 1, 0, 0, 0, 508, 506,
		1, 0, 0, 0, 508, 509, 1, 0, 0, 0, 509, 511, 1, 0, 0, 0, 510, 508, 1, 0,
		0, 0, 511, 512, 5, 39, 0, 0, 512, 544, 1, 0, 0, 0, 513, 514, 3, 101, 50,
		0, 514, 515, 5, 34, 0, 0, 515, 516, 5, 34, 0, 0, 516, 517, 5, 34, 0, 0,
		517, 521, 1, 0, 0, 0, 518, 520, 9, 0, 0, 0, 519, 518, 1, 0, 0, 0, 520,
		523, 1, 0, 0, 0, 521, 522, 1, 0, 0, 0, 521, 519, 1, 0, 0, 0, 522, 524,
		1, 0, 0, 0, 523, 521, 1, 0, 0, 0, 524, 525, 5, 34, 0, 0, 525, 526, 5, 34,
		0, 0, 526, 527, 5, 34, 0, 0, 527, 544, 1, 0, 0, 0, 528, 529, 3, 101, 50,
		0, 529, 530, 5, 39, 0, 0, 530, 531, 5, 39, 0, 0, 531, 532, 5, 39, 0, 0,
		532, 536, 1, 0, 0, 0, 533, 535, 9, 0, 0, 0, 534, 533, 1, 0, 0, 0, 535,
		538, 1, 0, 0, 0, 536, 537, 1, 0, 0, 0, 536, 534, 1, 0, 0, 0, 537, 539,
		1, 0, 0, 0, 538, 536, 1, 0, 0, 0, 539, 540, 5, 39, 0, 0, 540, 541, 5, 39,
		0, 0, 541, 542, 5, 39, 0, 0, 542, 544, 1, 0, 0, 0, 543, 447, 1, 0, 0, 0,
		543, 456, 1, 0, 0, 0, 543, 465, 1, 0, 0, 0, 543, 479, 1, 0, 0, 0, 543,
		493, 1, 0, 0, 0, 543, 503, 1, 0, 0, 0, 543, 513, 1, 0, 0, 0, 543, 528,
		1, 0, 0, 0, 544, 124, 1, 0, 0, 0, 545, 546, 7, 15, 0, 0, 546, 547, 3, 123,
		61, 0, 547, 126, 1, 0, 0, 0, 548, 551, 3, 93, 46, 0, 549, 551, 5, 95, 0,
		0, 550, 548, 1, 0, 0, 0, 550, 549, 1, 0, 0, 0, 551, 557, 1, 0, 0, 0, 552,
		556, 3, 93, 46, 0, 553, 556, 3, 95, 47, 0, 554, 556, 5, 95, 0, 0, 555,
		552, 1, 0, 0, 0, 555, 553, 1, 0, 0, 0, 555, 554, 1, 0, 0, 0, 556, 559,
		1, 0, 0, 0, 557, 555, 1, 0, 0, 0, 557, 558, 1, 0, 0, 0, 558, 128, 1, 0,
		0, 0, 559, 557, 1, 0, 0, 0, 560, 564, 5, 96, 0, 0, 561, 565, 3, 93, 46,
		0, 562, 565, 3, 95, 47, 0, 563, 565, 7, 16, 0, 0, 564, 561, 1, 0, 0, 0,
		564, 562, 1, 0, 0, 0, 564, 563, 1, 0, 0, 0, 565, 566, 1, 0, 0, 0, 566,
		564, 1, 0, 0, 0, 566, 567, 1, 0, 0, 0, 567, 568, 1, 0, 0, 0, 568, 569,
		5, 96, 0, 0, 569, 130, 1, 0, 0, 0, 38, 0, 313, 318, 328, 361, 366, 376,
		384, 390, 393, 398, 406, 409, 411, 416, 424, 426, 431, 441, 445, 450, 452,
		459, 461, 471, 473, 485, 487, 498, 508, 521, 536, 543, 550, 555, 557, 564,
		566, 1, 0, 1, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// SLLexerInit initializes any static state used to implement SLLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewSLLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func SLLexerInit() {
	staticData := &SLLexerLexerStaticData
	staticData.once.Do(sllexerLexerInit)
}

// NewSLLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewSLLexer(input antlr.CharStream) *SLLexer {
	SLLexerInit()
	l := new(SLLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &SLLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "SL.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// SLLexer tokens.
const (
	SLLexerFALSE          = 1
	SLLexerNULL           = 2
	SLLexerTRUE           = 3
	SLLexerAS             = 4
	SLLexerBREAK          = 5
	SLLexerCONST          = 6
	SLLexerCONTINUE       = 7
	SLLexerELSE           = 8
	SLLexerFOR            = 9
	SLLexerFUNCTION       = 10
	SLLexerIF             = 11
	SLLexerIMPORT         = 12
	SLLexerIN             = 13
	SLLexerLET            = 14
	SLLexerLOOP           = 15
	SLLexerPACKAGE        = 16
	SLLexerNAMESPACE      = 17
	SLLexerRETURN         = 18
	SLLexerVAR            = 19
	SLLexerVOID           = 20
	SLLexerWHILE          = 21
	SLLexerEQUALS         = 22
	SLLexerNOT_EQUALS     = 23
	SLLexerLESS           = 24
	SLLexerLESS_EQUALS    = 25
	SLLexerGREATER_EQUALS = 26
	SLLexerGREATER        = 27
	SLLexerLOGICAL_AND    = 28
	SLLexerLOGICAL_OR     = 29
	SLLexerLBRACKET       = 30
	SLLexerRPRACKET       = 31
	SLLexerLBRACE         = 32
	SLLexerRBRACE         = 33
	SLLexerLPAREN         = 34
	SLLexerRPAREN         = 35
	SLLexerDOT            = 36
	SLLexerCOMMA          = 37
	SLLexerMINUS          = 38
	SLLexerEXCLAM         = 39
	SLLexerQUESTIONMARK   = 40
	SLLexerCOLON          = 41
	SLLexerPLUS           = 42
	SLLexerSTAR           = 43
	SLLexerSLASH          = 44
	SLLexerPERCENT        = 45
	SLLexerWHITESPACE     = 46
	SLLexerCOMMENT        = 47
	SLLexerNUM_FLOAT      = 48
	SLLexerNUM_INT        = 49
	SLLexerNUM_UINT       = 50
	SLLexerSTRING         = 51
	SLLexerBYTES          = 52
	SLLexerIDENTIFIER     = 53
	SLLexerESC_IDENTIFIER = 54
)
